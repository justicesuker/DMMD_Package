% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Angle_Calculation.R
\name{joint_angle_cluster}
\alias{joint_angle_cluster}
\title{Function that estimates joint rank by method of profile likelihood.}
\usage{
joint_angle_cluster(
  angle_vec,
  angle_threshold = 90 * pi/180,
  variance = "unequal",
  throw = FALSE,
  maxiter = 100
)
}
\arguments{
\item{angle_vec}{A vector of principal angles}

\item{angle_threshold}{Optional Threshold (radians) that is used to truncate principal angles. Default is 45 degrees.}

\item{variance}{Either "equal" or "unequal", i.e whether the assumption is equal variance or unequal variance. Default is unequal.}

\item{cos_method}{TRUE or FALSE, i.e., whether use angles or cosine angles as the data to cluster. Default is FALSE.}
}
\value{
A list with the following elements:
\item{joint_rank}{Estimated joint rank.}
\item{profileloglikvec}{Profile log likelihood calculated at each index.
The function will return NA with a warning message, if less or equal to 2 principal angles are smaller than the threshold.}
}
\description{
Function that estimates joint rank by method of profile likelihood.
}
\examples{

data = DoubleDataGen(n = 20, p = 16, rank = c(4, 3), rc = 2, rr = 1, nrep = 1)
X1 = data$X1[[1]]
X2 = data$X2[[1]]
svd_x1 = svd(X1)
svd_x2 = svd(X2)
r1 = ProfileLikCluster(svd_x1$d)$index
r2 = ProfileLikCluster(svd_x2$d)$index
X1_est_c = as.matrix(svd_x1$u[,1:r1])
X2_est_c = as.matrix(svd_x2$u[,1:r2])
angle_result_c = angle_cal(X1_est_c, X2_est_c)
principal_angle_c = angle_result_c$angle
joint_rank_c = joint_angle_cluster(principal_angle_c)$joint_rank

}
